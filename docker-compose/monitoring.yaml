version: '3'

networks:
  monitoring:
  services:

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  loki:
    container_name: loki
    image: grafana/loki:2.9.0
    ports:
      - '9001:3100'
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring

  grafana:
    container_name: grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    image: grafana/grafana:latest
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - '9000:3000'
    networks:
      - monitoring

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.49.1
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9002:9090
    networks:
      - monitoring

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager
    ports:
      - 9003:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - monitoring
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  # node-exporter:
  #   container_name: node-exporter
  #   image: quay.io/prometheus/node-exporter:latest
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #     - /:/host:ro,rslave
  #   command:
  #     - '--path.rootfs=/host'
  #     - '--path.procfs=/host/proc'
  #     - '--path.sysfs=/host/sys'
  #     - --collector.filesystem.ignored-mount-points
  #     - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
  #   ports:
  #     - 9004:9100
  #   networks:
  #     - monitoring

  # cadvisor:
  #   container_name: cadvisor
  #   image: gcr.io/cadvisor/cadvisor
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #   ports:
  #     - 9005:8080
  #   networks:
  #     - monitoring
  #   restart: always
 